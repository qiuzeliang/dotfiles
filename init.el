
;; package-config
(require 'package)
(package-initialize)
(setq package-archives '
      (("gun" . "http://elpa.emacs-china.org/gun/")
       ("melpa" . "http://elpa.emacs-china.org/melpa/")))

;; install packager
(require 'cl)

(defvar my/packages '(
		;; --- Auto-completion ---
		company
		;; --- Better Editor ---
		smartparens
		hungry-delete
		popwin
		cnfonts
		;; --- Major Mode ---
		;; --- Minor Mode ---
		ido
		helm
		;; --- org-mode
		org-bullets
		org-autolist
		org-alert
		;; --- Themes ---
		monokai-theme
	        solarized-theme
		) "Default packages")

(setq package-selected-packages my/packages)

(defun my/packages-installed-p ()
     (loop for pkg in my/packages
	   when (not (package-installed-p pkg)) do (return nil)
	   finally (return t)))

(unless (my/packages-installed-p)
     (message "%s" "Refreshing package database...")
     (package-refresh-contents)
     (dolist (pkg my/packages)
       (when (not (package-installed-p pkg))
	 (package-install pkg))))

;; UI setting
(setq-default cursor-type 'bar)
(setq make-backup-files nil)
(setq auto-save-default nil)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(menu-bar-mode -1)
(global-linum-mode t)
(global-hl-line-mode t)
(setq make-backup-files nil)
(setq auto-save-default nil)
(setq inhibit-splash-screen t)
(setq initial-frame-alist (quote ((fullscreen . maximized))))

;; Auto generated by cnfonts
;; <https://github.com/tumashu/cnfonts>
(set-face-attribute
 'default nil
 :font (font-spec :name "-outline-Consolas-bold-normal-normal-mono-*-*-*-*-c-*-iso10646-1"
                  :weight 'normal
                  :slant 'normal
                  :size 9.0))
(dolist (charset '(kana han symbol cjk-misc bopomofo))
  (set-fontset-font
   (frame-parameter nil 'font)
   charset
   (font-spec :name "-outline-微软雅黑-normal-normal-normal-sans-*-*-*-*-p-*-iso10646-1"
              :weight 'normal
              :slant 'normal
              :size 10.5)))

;; set default font
;;(set-face-attribute 'default nil :font "Consolas 10")
;; set chinese font
;;(dolist (charset '(kana han symbol cjk-misc bopomofo))
;;  (set-fontset-font (frame-parameter nil 'font) charset
;;		    (font-spec :family "Microsoft YaHei" :size 13)))

;; Better Editor
(fset 'yes-or-no-p 'y-or-n-p)
(delete-selection-mode t)
(global-auto-revert-mode 1)
(require 'cnfonts)
(require 'ido)
(ido-mode t)
(setq org-completion-use-ido t)

(global-set-key (kbd "C-x C-b") 'helm-buffers-list)

(require 'hungry-delete)
(global-hungry-delete-mode)
(require 'smartparens-config)
(require 'popwin)
(popwin-mode 1)

(recentf-mode 1)
(setq recentf-max-menu-items 10)
(global-set-key (kbd "C-x C-r") 'recentf-open-files)

(defun open-init-file()
  (interactive)
  (find-file "~/.emacs.d/init.el"))
(global-set-key (kbd "<f2>") 'open-init-file)

(load-theme 'monokai 1)
(global-company-mode t)

;; org-mode
(setq system-time-locale "C")

(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)
(global-set-key (kbd "C-c b") 'org-iswitchb)

(require 'org)
(setq org-src-fontify-natively t)

(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
(add-hook 'org-mode-hook (lambda () (org-autolist-mode)))
(add-hook 'org-mode-hook (lambda () (setq truncate-lines nil)))

(require 'org-alert)
(setq alert-default-style 'libnotify)

(setq org-agenda-dir "~/org")
(setq org-agenda-files '("~/org" "~/org/note"))
(setq org-default-notes-file (concat org-agenda-dir "/default.org"))
(setq org-agenda-file-inbox (expand-file-name "inbox.org" org-agenda-dir))
(setq org-agenda-file-gtd (expand-file-name "gtd.org" org-agenda-dir))
(setq org-agenda-file-note (expand-file-name "notes.org" org-agenda-dir))
(setq org-agenda-file-journal (expand-file-name "journal.org" org-agenda-dir))

(setq org-refile-targets '((nil :maxlevel . 4)
			   (org-agenda-files :maxlevel . 4)))
(setq org-archive-location (concat org-agenda-dir "/archived.org::"))

(setq org-capture-templates
      '(("b" "Inbox" entry (file+headline org-agenda-file-inbox "Inbox") "* TODO %?\n %i\n"
	 :empty-lines 1)
	("t" "Todo" entry (file+headline org-agenda-file-gtd "Tasks") "* TODO [#B] %?\n %i\n %U"
	 :empty-lines 1)
	("n" "Note" entry (file+headline org-agenda-file-note "Notes") "* %?\n %i\n %U"
	 :empty-lines 1)
	("j" "Journal" entry (file+datetree org-agenda-file-journal) "* %?"
	 :empty-lines 1)
	("i" "Idea" entry (file+headline org-agenda-file-note "Ideas") "* TODO [#B] %?\n %i\n %U"
	 :empty-lines 1)
	("w" "Work" entry (file+headlien org-agenda-file-gtd "Works") "* TODO [#A] %?\n %i\n %U"
	 :empty-lines 1)
	("l" "Link" entry (file+headline org-agenda-file-note "Notes") "* TODO [#C] %?\n %i\n %a \n %U"
	 :empty-lines 1)
	("p" "Chrome Link" entry (file+headline org-agenda-file-inbox "Inbox")  "* %^{Title}\nSource: %u, %c\n #+BEGIN_QUOTE\n%i\n#+END_QUOTE\n\n\n%?"
	 :empty-lines 1)
	("c" "Chrome" entry (file+headline org-agenda-file-inbox "Inbox") "* %? [[%:link][%:description]] \nCaptured On: %U"
	 :empty-lines 1)
	))
